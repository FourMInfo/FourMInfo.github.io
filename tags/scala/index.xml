<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scala on FourM</title>
    <link>http://fourm.info/tags/scala/</link>
    <description>Recent content in Scala on FourM</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://fourm.info/tags/scala/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Functional Programming for the Unprincipled Part 2</title>
      <link>http://fourm.info/post/functional-programming-for-the-unprincipled-2/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://fourm.info/post/functional-programming-for-the-unprincipled-2/</guid>
      <description>Frodo, Don’t Wear the Ring! The first part of this article discussed why FP in general, and pure FP in particular, is a critically important programming paradigm that all software developers should add to their tool chest. We concluded by asking why isn’t the whole programming world rushing to adopt functional programming? We answer that here.
This article essentially provides most of the reasons (excuses) why people, even people who claim to be sympathetic to FP, don’t want to do it.</description>
    </item>
    
    <item>
      <title>Functional Programming for the Unprincipled Part 1</title>
      <link>http://fourm.info/post/functional-programming-for-the-unprincipled-1/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://fourm.info/post/functional-programming-for-the-unprincipled-1/</guid>
      <description>Anti-Intellectual Semantics Not too long ago, I read a Twitter comment by one of the luminaries behind the ScalaZ functional programming (FP) framework which said:
 Scalaz 8&amp;rsquo;s competition is NOT Scalaz 7/Cats/etc. “No one’” uses these. The real competition is non-FP in Scala, i.e. 99% of the market.
 Obviously this comment is hyperbole, but on the surface it makes no sense. Anyone with even the slightest acquaintance with Scala is aware that Martin Odersky created this language with the intention that it allow programmers to use both the OOP and FP paradigms.</description>
    </item>
    
  </channel>
</rss>